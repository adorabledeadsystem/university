using System;

namespace prac2
{
    static class Difference
    {
        public static int FlagDays(int day1, int day2)
        {
            if (day1 < day2)
            {
                return 2;
            }
            else if (day1 > day2)
            {
                return 1;
            }
            else { return 0; }
        }
        public static int FlagMonths(int month1, int month2)
        {
            if (month1 < month2)
            {
                return 2;
            }
            else if (month1 > month2)
            {
                return 1;
            }
            else { return 0; }
        }
        public static int DifferenceDays(int day1, int day2, int flag)
        {
            int totalDays = 0;
            int yearDay = 31;
            switch (flag)
            {
                case 2:
                    totalDays = (yearDay - day2) + (day1 - 2);
                    break;
                case 1:
                    totalDays = day1 - day2;
                    break;
                case 0:
                    totalDays = 0;
                    break;
                default:
                    Console.WriteLine("Something went wrong");
                    break;
            }
            return totalDays;

        }
        public static int DifferenceMonths(int month1, int month2, int flag, int flagDays)
        {
            int totalMonths = 0;
            int yearMonth = 12;
            switch (flag)
            {
                case 2:
                    totalMonths = yearMonth - month2 + month1 - 1;
                    break;
                case 1:
                    totalMonths = month1 - month2;
                    break;
                case 0:
                    totalMonths = 0;
                    break;
                default:
                    Console.WriteLine("Something went wrong");
                    break;
            }
            if (flagDays == 2) { totalMonths--; }
            return totalMonths;

        }
        public static int DifferenceYears(int year1, int year2, int flagMonths)
        {
            int totalYears = 0;
            totalYears = year1 - year2;
            if (flagMonths == 2) { totalYears--; }
            return totalYears;
        }
    }
    static class Calculation
    {
        public static int CalculatingLeapYears(int birthYear, int todayYear)
        {
            int counter = 0;
            for (int i = birthYear; i < todayYear; i++)
            {
                if (i % 4 == 0)
                {
                    if (i % 100 == 0)
                    {
                        if (i % 400 == 0) { counter++; }
                    }
                    else { counter++; }
                }
            }
            return counter;
        }
        public static int ConvertingMonthsToDays(int counter, int years)
        {
            int totalDays = 0;
            for (int i = 0; i <= 12; i++)
            {
                switch (i)
                {
                    case 1:
                    case 3:
                    case 5:
                    case 7:
                    case 8:
                    case 10:
                    case 12:
                        totalDays += years * 31;
                        continue;
                    case 4:
                    case 6:
                    case 9:
                    case 11:
                        totalDays += years * 30;
                        continue;
                    case 2:
                        totalDays += (years - counter) * 28;
                        continue;
                }
            }
            totalDays += counter * 29;
            return totalDays;
        }
        public static int ThisYearMonths(int totalMonths, int todayYear)
        {
            int resultDays = 0;
            for (int i = 0; i <= totalMonths; i++)
            {
                switch (i)
                {
                    case 1:
                    case 3:
                    case 5:
                    case 7:
                    case 8:
                    case 10:
                    case 12:
                        resultDays += 31;
                        continue;
                    case 4:
                    case 6:
                    case 9:
                    case 11:
                        resultDays += 30;
                        continue;
                    case 2:
                        if (todayYear % 4 == 0)
                        {
                            if (todayYear % 100 == 0)
                            {
                                if (todayYear % 400 == 0) { resultDays += 29; }
                            }
                            else { resultDays += 29; }
                        }
                        else { resultDays += 28; }
                        continue;
                }
            }
            return resultDays;
        }
        class DateFlags
        {
            public static int DayRLFlag()
            {
                bool day = false;
                int date = 0;
                while (day != true)
                {
                    Console.WriteLine("Day:");
                    date = Convert.ToInt32(Console.ReadLine());
                    if (date <= 31 && date > 0)
                    {
                        day = true;
                        break;
                    }
                    else { day = false; Console.WriteLine("Wrong! Enter day from 1 to 31"); }
                }
                return date;
            }
            public static int MonthRLFlag()
            {
                bool month = false;
                int date = 0;
                while (month != true)
                {
                    Console.WriteLine("Month:");
                    date = Convert.ToInt32(Console.ReadLine());
                    if (date <= 12 && date > 0)
                    {
                      month = true;
                        break;
                    }
                    else { month = false; Console.WriteLine("Wrong! Enter month from 1 to 12"); }
                }
                return date;
            }
            public static int YearRLineFlag(int TodayYear)
            {
                bool year = false;
                int date = 0;
                while (year != true)
                {
                    Console.WriteLine("Year:");
                    date = Convert.ToInt32(Console.ReadLine());
                    if (date <= TodayYear && date > 0)
                    {
                        year = true;
                        break;
                    }
                    else { year = false; Console.WriteLine("Wrong! Enter year from 1 to " + TodayYear); }
                }
                return date;
            }
        }
        class Program
        {

            static void Main(string[] args)
            {
                int Leap_count = 0;
                int totalDays = 0;
                int totalMonths = 0;
                int totalYears = 0;

                DateTime today = DateTime.Today;
                int TodayYear = today.Year;int TodayMonth = today.Month;int TodayDay = today.Day;
                Console.WriteLine("Hello, enter your date, please: (00-00-0000)");
                int birthDay = DateFlags.DayRLFlag();
                int birthMonth = DateFlags.MonthRLFlag();
                int birthYear = DateFlags.YearRLineFlag(TodayYear);

                int flagDays = Difference.FlagDays(TodayDay, birthDay);
                totalDays = Difference.DifferenceDays(TodayDay, birthDay, flagDays);
                int flagMonths = Difference.FlagMonths(TodayMonth, birthMonth);
                totalMonths = Difference.DifferenceMonths(TodayMonth, birthMonth, flagMonths, flagDays);
                totalYears = Difference.DifferenceYears(TodayYear, birthYear, flagMonths);
                /*Console.WriteLine(totalDays);
                Console.WriteLine(totalMonths);
                Console.WriteLine(totalYears);*/
                Leap_count = Calculation.CalculatingLeapYears(birthYear, TodayYear);
                totalDays += Calculation.ConvertingMonthsToDays(Leap_count, totalYears);
                totalDays += Calculation.ThisYearMonths(totalMonths, TodayYear);
                Console.WriteLine("\nYou are " + totalDays + " day(s) old");
            }
        }
    }
}
